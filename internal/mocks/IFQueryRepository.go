// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	entities "fast-search/internal/domain/entities"

	mock "github.com/stretchr/testify/mock"
)

// IFQueryRepository is an autogenerated mock type for the IFQueryRepository type
type IFQueryRepository struct {
	mock.Mock
}

// Save provides a mock function with given fields: query
func (_m *IFQueryRepository) Save(query *entities.Query) error {
	ret := _m.Called(query)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*entities.Query) error); ok {
		r0 = rf(query)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIFQueryRepository creates a new instance of IFQueryRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIFQueryRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IFQueryRepository {
	mock := &IFQueryRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
